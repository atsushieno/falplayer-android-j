package nativeandroid.stdio.jnaerated;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : /usr/include/sys/cdefs.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("nativeandroid.stdio") 
public class FILE extends StructObject {
	public FILE() {
		super();
	}
	public FILE(Pointer pointer) {
		super(pointer);
	}
	/**
	 * current position in (some) buffer<br>
	 * C type : unsigned char*
	 */
	@Field(0) 
	public Pointer<Byte > _p() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * current position in (some) buffer<br>
	 * C type : unsigned char*
	 */
	@Field(0) 
	public FILE _p(Pointer<Byte > _p) {
		this.io.setPointerField(this, 0, _p);
		return this;
	}
	/// read space left for getc()
	@Field(1) 
	public int _r() {
		return this.io.getIntField(this, 1);
	}
	/// read space left for getc()
	@Field(1) 
	public FILE _r(int _r) {
		this.io.setIntField(this, 1, _r);
		return this;
	}
	/// write space left for putc()
	@Field(2) 
	public int _w() {
		return this.io.getIntField(this, 2);
	}
	/// write space left for putc()
	@Field(2) 
	public FILE _w(int _w) {
		this.io.setIntField(this, 2, _w);
		return this;
	}
	/// flags, below; this FILE is free if 0
	@Field(3) 
	public short _flags() {
		return this.io.getShortField(this, 3);
	}
	/// flags, below; this FILE is free if 0
	@Field(3) 
	public FILE _flags(short _flags) {
		this.io.setShortField(this, 3, _flags);
		return this;
	}
	/// fileno, if Unix descriptor, else -1
	@Field(4) 
	public short _file() {
		return this.io.getShortField(this, 4);
	}
	/// fileno, if Unix descriptor, else -1
	@Field(4) 
	public FILE _file(short _file) {
		this.io.setShortField(this, 4, _file);
		return this;
	}
	/**
	 * the buffer (at least 1 byte, if !NULL)<br>
	 * C type : __sbuf
	 */
	@Field(5) 
	public __sbuf _bf() {
		return this.io.getNativeObjectField(this, 5);
	}
	/// 0 or -_bf._size, for inline putc
	@Field(6) 
	public int _lbfsize() {
		return this.io.getIntField(this, 6);
	}
	/// 0 or -_bf._size, for inline putc
	@Field(6) 
	public FILE _lbfsize(int _lbfsize) {
		this.io.setIntField(this, 6, _lbfsize);
		return this;
	}
	/**
	 * operations<br>
	 * cookie passed to io functions<br>
	 * C type : void*
	 */
	@Field(7) 
	public Pointer<? > _cookie() {
		return this.io.getPointerField(this, 7);
	}
	/**
	 * operations<br>
	 * cookie passed to io functions<br>
	 * C type : void*
	 */
	@Field(7) 
	public FILE _cookie(Pointer<? > _cookie) {
		this.io.setPointerField(this, 7, _cookie);
		return this;
	}
	/// C type : _close_callback
	@Field(8) 
	public Pointer<FILE._close_callback > _close() {
		return this.io.getPointerField(this, 8);
	}
	/// C type : _close_callback
	@Field(8) 
	public FILE _close(Pointer<FILE._close_callback > _close) {
		this.io.setPointerField(this, 8, _close);
		return this;
	}
	/// C type : _read_callback
	@Field(9) 
	public Pointer<FILE._read_callback > _read() {
		return this.io.getPointerField(this, 9);
	}
	/// C type : _read_callback
	@Field(9) 
	public FILE _read(Pointer<FILE._read_callback > _read) {
		this.io.setPointerField(this, 9, _read);
		return this;
	}
	/// C type : _seek_callback
	@Field(10) 
	public Pointer<FILE._seek_callback > _seek() {
		return this.io.getPointerField(this, 10);
	}
	/// C type : _seek_callback
	@Field(10) 
	public FILE _seek(Pointer<FILE._seek_callback > _seek) {
		this.io.setPointerField(this, 10, _seek);
		return this;
	}
	/// C type : _write_callback
	@Field(11) 
	public Pointer<FILE._write_callback > _write() {
		return this.io.getPointerField(this, 11);
	}
	/// C type : _write_callback
	@Field(11) 
	public FILE _write(Pointer<FILE._write_callback > _write) {
		this.io.setPointerField(this, 11, _write);
		return this;
	}
	/**
	 * extension data, to avoid further ABI breakage<br>
	 * C type : __sbuf
	 */
	@Field(12) 
	public __sbuf _ext() {
		return this.io.getNativeObjectField(this, 12);
	}
	/**
	 * data for long sequences of ungetc()<br>
	 * saved _p when _p is doing ungetc data<br>
	 * C type : unsigned char*
	 */
	@Field(13) 
	public Pointer<Byte > _up() {
		return this.io.getPointerField(this, 13);
	}
	/**
	 * data for long sequences of ungetc()<br>
	 * saved _p when _p is doing ungetc data<br>
	 * C type : unsigned char*
	 */
	@Field(13) 
	public FILE _up(Pointer<Byte > _up) {
		this.io.setPointerField(this, 13, _up);
		return this;
	}
	/// saved _r when _r is counting ungetc data
	@Field(14) 
	public int _ur() {
		return this.io.getIntField(this, 14);
	}
	/// saved _r when _r is counting ungetc data
	@Field(14) 
	public FILE _ur(int _ur) {
		this.io.setIntField(this, 14, _ur);
		return this;
	}
	/**
	 * tricks to meet minimum requirements even when malloc() fails<br>
	 * guarantee an ungetc() buffer<br>
	 * C type : unsigned char[3]
	 */
	@Array({3}) 
	@Field(15) 
	public Pointer<Byte > _ubuf() {
		return this.io.getPointerField(this, 15);
	}
	/**
	 * guarantee a getc() buffer<br>
	 * C type : unsigned char[1]
	 */
	@Array({1}) 
	@Field(16) 
	public Pointer<Byte > _nbuf() {
		return this.io.getPointerField(this, 16);
	}
	/**
	 * separate buffer for fgetln() when line crosses buffer boundary<br>
	 * buffer for fgetln()<br>
	 * C type : __sbuf
	 */
	@Field(17) 
	public __sbuf _lb() {
		return this.io.getNativeObjectField(this, 17);
	}
	/**
	 * Unix stdio files get aligned to block boundaries on fseek()<br>
	 * stat.st_blksize (may be != _bf._size)
	 */
	@Field(18) 
	public int _blksize() {
		return this.io.getIntField(this, 18);
	}
	/**
	 * Unix stdio files get aligned to block boundaries on fseek()<br>
	 * stat.st_blksize (may be != _bf._size)
	 */
	@Field(18) 
	public FILE _blksize(int _blksize) {
		this.io.setIntField(this, 18, _blksize);
		return this;
	}
	/**
	 * current lseek offset<br>
	 * C type : fpos_t
	 */
	@CLong 
	@Field(19) 
	public long _offset() {
		return this.io.getCLongField(this, 19);
	}
	/**
	 * current lseek offset<br>
	 * C type : fpos_t
	 */
	@CLong 
	@Field(19) 
	public FILE _offset(long _offset) {
		this.io.setCLongField(this, 19, _offset);
		return this;
	}
	/// <i>native declaration : /usr/include/sys/cdefs.h</i>
	public static abstract class _close_callback extends Callback<_close_callback > {
		public abstract int apply(Pointer<? > voidPtr1);
	};
	/// <i>native declaration : /usr/include/sys/cdefs.h</i>
	public static abstract class _read_callback extends Callback<_read_callback > {
		public abstract int apply(Pointer<? > voidPtr1, Pointer<Byte > charPtr1, int int1);
	};
	/// <i>native declaration : /usr/include/sys/cdefs.h</i>
	public static abstract class _seek_callback extends Callback<_seek_callback > {
		@CLong 
		public abstract long apply(Pointer<? > voidPtr1, @CLong long fpos_t1, int int1);
	};
	/// <i>native declaration : /usr/include/sys/cdefs.h</i>
	public static abstract class _write_callback extends Callback<_write_callback > {
		public abstract int apply(Pointer<? > voidPtr1, Pointer<Byte > charPtr1, int int1);
	};
}
